Bugs
================================================================================
Output SQL: lines are not terminated with semicolon
Backup SQL: lines are not terminated with semicolon
Controller: Record this replacement attempt in the database table
Controller: Enforce minimum execution time
We should be excluding our own options (do not try to replace the replacement setup of the replacement engine!)

GUI
================================================================================
Main page (Control Panel)
	Show grid of replacement jobs
		View log
		Download output SQL (can be multipart)
		Apply output SQL
		Download backup SQL (can be multipart)
	New -- create a new job with default values
	Clone as new -- create a new job using the configuration of the selected job as a starting point
	Delete Files -- only delete the output, backup and log files
	Delete -- everything in Delete Files + delete the database record
	Restore -- apply the Backup SQL
	Export -- export the configuration as JSON
	Import -- import a JSON configuration and open the New Job page in the Replace view

SQL Runner
	Needs a replacement job ID and whether to apply output or backup SQL
	Need to import the Database\Restore package from ANGIE into the library and test it
	Will need to reuse and adapt JS code from ANGIE

View log
	If latest=1 use the latest replacement job
	Check *total* size of log file. If over 1MB ask whether to display it.
	When displaying remember that it may be multipart
	Download buttons (remember that it may be multipart)

WP-CLI
	Execute a replacement (with possibility for import)
	Download output SQL
	Apply output SQL
	Download backup SQL
	Apply backup SQL
	Export
	List past jobs / latest job
	Delete files
	Delete

Code + Tests (Library)
================================================================================
Add RegEx support to replacer
    Add RegEx support -- Special worry about UTF data!
    Test RegEx support

Maybe I can test the MVC classes I'll be writing?

Maybe a database driver which is a decorator to $wpdb (can't test it, though?)

Interfaces
================================================================================
WordPress plugin
    The replacement entry point should be a separate .php page, directly accessible, which is locked by a password.
    The password will be based off the site's secret.

    A main page to enter replacements and choose what to exclude from the process (whole tables or just some columns)
    A quick interface to populate that based on old and new site's URL and path on the server

    A page to show past jobs and their output SQL file, backup SQL file, log
    Can export to JSON and import from JSON

    Restore from backup page
        I need to implement the db restoration code first!

    Options page
        Auto-output to SQL
        Take automatic backups
        Log level
        Maximum number of jobs to keep

    A page and a script to show the URL and path to the current site
    Option to save the URL and path to the site in the database. We can use that to populate the quick changes UI.

CLI
    Single PHAR file, maybe use Symfony console package or similar to create the interface

Standalone
    Single file build (with stripped comments and extraneous newlines) like we do for Kickstart
