<?xml version="1.0"?>
<!--
  ~ @package   AkeebaReplace
  ~ @copyright Copyright (c)2018-2020 Nicholas K. Dionysopoulos / Akeeba Ltd
  ~ @license   http://www.gnu.org/copyleft/gpl.html GNU/GPL v3 or later
  -->

<project name="replace" description="Akeeba Replace" default="all" >
	<import file="${phing.dir}/../../buildfiles/phing/common.xml" />

	<taskdef name="wpreadme" classname="scripts.WpreadmeTask"/>

	<property name="dirs.kickstart" value="../source" />
	<property name="dirs.translations" value="../translations" />

	<!--
====================================================================================================
File sets
====================================================================================================
-->
	<fileset dir="${dirs.root}/src/akeebareplace" id="plugin" expandsymboliclinks="true">
		<include name="**" />

		<!-- Output files -->
		<exclude name="output/*.s*" />
		<exclude name="output/*.l*" />

		<!-- Do not copy over FEF media files for other platforms -->
        <exclude name="fef/css/fef-joomla.*" />
        <exclude name="fef/css/fef-standalone.*" />
        <exclude name="fef/css/styleguide.*" />

		<!-- Do not copy over FEF CSS map files -->
        <exclude name="fef/css/*.css.map" />

		<!-- Do not copy optional fonts -->
		<exclude name="fef/fonts/Montserrat/**" />
        <exclude name="fef/fonts/Open_Sans/**" />

		<!-- Do not copy optional font formats -->
		<exclude name="fef/fonts/*/*.eot" />
		<exclude name="fef/fonts/*/*.svg" />
		<exclude name="fef/fonts/*/*.ttf" />

		<!-- Do not copy FEF image files -->
		<exclude name="fef/images/**" />

		<!-- Do not copy FEF JS files -->
		<exclude name="fef/js/**" />
	</fileset>

	<!--
	====================================================================================================
	Tasks - General
	====================================================================================================
	-->

	<target name="git" description="Makes only packages, not the documentation"
			depends="new-release,setup-properties,plugin">
	</target>
	
	<target name="documentation" description="Creates the documentation packages"
		depends="doc-main-pdf">
	</target>

	<!--
	====================================================================================================
	Tasks - Documentation
	====================================================================================================
	-->

    <target name="doc-main-pdf" description="Documentation for Kickstart in PDF format">
		<phingcall target="docbook-pdf">
			<property name="docs.input" value="replace.xml" />
		</phingcall>
	</target>

	<!--
	====================================================================================================
	Tasks - Utilities
	====================================================================================================
	-->
	
	<target name="plugin" depends="setup-properties,setup-filterchains">
		<!-- Create the readme.txt file. This file renders the WP directory page. -->
		<wpreadme></wpreadme>

		<copy file="${dirs.release}/readme.txt" tofile="${dirs.root}/src/akeebareplace/readme.txt" overwrite="true">
			<filterchain refid="standard-tokens"/>
		</copy>

		<!-- Copy the changelog into the plugin -->
		<!--<copy file="${dirs.root}/CHANGELOG" tofile="${dirs.root}/src/akeebareplace/CHANGELOG" overwrite="true" />-->

		<!-- Create entry point file. Its header tells WP how to display it in the Plugins page -->
		<copy file="./templates/akeebareplace.php" tofile="${dirs.root}/src/akeebareplace/akeebareplace.php" overwrite="true">
			<filterchain refid="standard-tokens"/>
		</copy>

		<!-- Create the plugin ZIP file -->
		<zipme basedir="${dirs.root}/src/akeebareplace" prefix="akeebareplace" destfile="${dirs.release}/akeebareplace-${version}.zip" includeemptydirs="true">
			<fileset refid="plugin" />
		</zipme>

		<!-- Delete leftover files -->
		<delete file="${dirs.release}/readme.txt"/>
	</target>

	<target name="setup-filterchains" depends="setup-properties">
		<filterchain id="standard-tokens">
			<replacetokens begintoken="##" endtoken="##">
				<token key="PLUGINNAME" value="Akeeba Replace"/>
				<token key="DATE" value="${build.date}"/>
				<token key="VERSION" value="${version}"/>
			</replacetokens>
		</filterchain>
	</target>

	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

    <target name="release">
        <!-- Make sure there is a tag that's the same as the version number -->
        <gittag gitPath="${git.binary}"
                repository="${dirs.root}"
                list="true" pattern="${version}"
                outputProperty="git.tags"
        />

        <php function="trim" returnProperty="git.tags">
            <param value="${git.tags}" />
        </php>

        <if>
            <not>
                <equals arg1="${git.tags}" arg2="${version}" />
            </not>
            <then>
                <fail message="You must tag version ${version} before trying to release it." />
            </then>
        </if>

        <!-- Verify the tag. If it can't verify the tag the build fails. -->
        <gittag gitPath="${git.binary}"
                repository="${dirs.root}"
                verify="true"
                object="${version}"
                outputProperty="git.verify"
        />

        <!-- Make a draft release -->
        <loadfile property="github.release.body" file="${dirs.root}/RELEASENOTES.md" />

        <GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                       tagName="${version}" releaseName="v.${version}" releaseBody="${github.release.body}" draft="1"
                       propName="github.release.id" />

        <!-- Upload the release files -->
        <GitHubAsset token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                     file="${dirs.release}/akeebareplace-${version}.zip"
                     releaseId="${github.release.id}" />

        <!-- Publish the release -->
        <GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
                       tagName="${version}" draft="0" />
    </target>

    <target name="docsdeploy">
        <echo message="The documentation can be found in the repository's Wiki on GitHub. This task is obsolete." />
    </target>

</project>
